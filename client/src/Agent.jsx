import React, { useState, useEffect } from 'react';
import useVoiceCommands from './VoiceCommandEngine';
import { fetchChats, createChat, deleteChat, updateChat } from './api/agentApi';
import ChatList from './ChatList';

const Agent = () => {
  const [chats, setChats] = useState({ text: [], nlp: [], image: [] });
  const [activeDomain, setActiveDomain] = useState('text');
  const [status, setStatus] = useState('');
  const { transcript, start, stop, listening } = useVoiceCommands(handleVoiceCommand);

  async function loadChats() {
    const data = await fetchChats();
    setChats(data);
  }

  async function handleVoiceCommand({ action, domain, id }) {
    if (!action || !domain) return;
    try {
      switch (action) {
        case 'create':
          await createChat({ domain, message: 'Generated by voice 🎙' });
          break;
        case 'delete':
          await deleteChat(domain, id);
          break;
        case 'update':
          await updateChat(domain, id, { message: 'Voice updated message ✍️' });
          break;
        case 'show':
          setActiveDomain(domain);
          setStatus(`Switched to ${domain} view.`);
          return;
      }
      setStatus(`✅ ${action} on ${domain}${id !== null ? ` chat ${id}` : ''}`);
      await loadChats();
    } catch (err) {
      setStatus(`❌ Failed: ${err.message}`);
    }
  }

  useEffect(() => {
    loadChats();
  }, []);

  return (
    <div className="ai-agent">
      <h2>AI Agent Dashboard 🎛</h2>
      <div className="controls">
        <button onClick={start}>{listening ? '🎙 Listening…' : '▶️ Start Voice'}</button>
        <button onClick={stop}>⏹ Stop</button>
        <p><strong>Status:</strong> {status}</p>
        <p><strong>Transcript:</strong> {transcript}</p>
      </div>

      <h3>{activeDomain.toUpperCase()} Chats</h3>
      <ChatList domain={activeDomain} chats={chats[activeDomain]} />
    </div>
  );
};

export default Agent;
